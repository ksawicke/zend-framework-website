BEGIN

RETURN

WITH

A ( EMPLOYER_NUMBER , EMPLOYEE_NUMBER , EMPLOYEE_NAME , EMPLOYEE_COMMON_NAME , EMPLOYEE_LAST_NAME ,
	EMPLOYEE_EMAIL_ADDRESS ,
LEVEL_1 , LEVEL_2 , LEVEL_3 , LEVEL_4 , POSITION_CODE , POSITION_TITLE ,
EMPLOYEE_HIRE_DATE , SALARY_TYPE ,

	MANAGER_EMPLOYEE_NUMBER , MANAGER_NAME , MANAGER_COMMON_NAME , MANAGER_LAST_NAME ,
MANAGER_EMAIL_ADDRESS ,
MANAGER_POSITION_CODE , MANAGER_POSITION_TITLE ,

	PTO_EARNED , PTO_TAKEN , PTO_UNAPPROVED , PTO_PENDING , PTO_PENDING_TMP ,
FLOAT_EARNED , FLOAT_TAKEN , FLOAT_UNAPPROVED , FLOAT_PENDING , FLOAT_PENDING_TMP ,
SICK_EARNED , SICK_TAKEN , SICK_UNAPPROVED , SICK_PENDING , SICK_PENDING_TMP ,
GF_EARNED , GF_TAKEN , GF_UNAPPROVED , GF_PENDING , GF_PENDING_TMP ,

	UNEXCUSED_UNAPPROVED , UNEXCUSED_PENDING , UNEXCUSED_PENDING_TMP ,
BEREAVEMENT_UNAPPROVED , BEREAVEMENT_PENDING , BEREAVEMENT_PENDING_TMP ,
	CIVIC_DUTY_UNAPPROVED , CIVIC_DUTY_PENDING , CIVIC_DUTY_PENDING_TMP ,
	UNPAID_UNAPPROVED , UNPAID_PENDING , UNPAID_PENDING_TMP
)
AS (
SELECT EMPLOYEE . PRER , REFACTOR_EMPLOYEE_ID ( EMPLOYEE . PREN ) , EMPLOYEE . PRCKNM , EMPLOYEE . PRCOMN , EMPLOYEE . PRLNM ,
	EMPLOYEE . PREML1 ,
EMPLOYEE . PRL01 , EMPLOYEE . PRL02 , EMPLOYEE . PRL03 , EMPLOYEE . PRL04 , EMPLOYEE . PRPOS , EMPLOYEE . PRTITL ,
	EMPLOYEE . PRDOHE , EMPLOYEE . PRPAY ,

	-- GET MANAGER DATA
	REFACTOR_EMPLOYEE_ID ( MANAGER_ADDONS . PREN ) , MANAGER_ADDONS . PRCKNM , MANAGER_ADDONS . PRCOMN , MANAGER_ADDONS . PRLNM ,
	MANAGER_ADDONS . PREML1 ,
MANAGER_ADDONS . PRPOS , MANAGER_ADDONS . PRTITL ,
	
	-- GET ALL PTO DATA
	EMPLOYEE . PRVAC , EMPLOYEE . PRVAT ,
	( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'P' ) ) AS DATA ) ,
	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'P' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'P' ) ) AS DATA )
	END ,

	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'P' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'P' ) ) AS DATA )
	END ,

	-- GET ALL FLOAT DATA
	EMPLOYEE . PRSHA , EMPLOYEE . PRSHT ,
	( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'K' ) ) AS DATA ) ,
	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'K' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'K' ) ) AS DATA )
	END ,

	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'K' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'K' ) ) AS DATA )
	END ,

	-- GET ALL SICK DATA
	EMPLOYEE . PRSDA , EMPLOYEE . PRSDT ,
	( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'S' ) ) AS DATA ) ,
	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'S' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'S' ) ) AS DATA )
	END ,

	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'S' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'S' ) ) AS DATA )
	END ,

	-- GET ALL GF DATA
	EMPLOYEE . PRAC5E , EMPLOYEE . PRAC5T ,
	( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'R' ) ) AS DATA ) ,
	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'R' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'R' ) ) AS DATA )
	END ,

CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'R' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'R' ) ) AS DATA )
	END ,

	-- GET ALL UNEXCUSED DATA
	( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'X' ) ) AS DATA ) ,
CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'X' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'X' ) ) AS DATA )
	END ,

	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'X' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'X' ) ) AS DATA )
	END ,


-- GET ALL BEREAVEMENT DATA
( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'B' ) ) AS DATA ) ,
CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'B' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'B' ) ) AS DATA )
	END ,

CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'B' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'B' ) ) AS DATA )
	END ,


-- GET ALL CIVIC DUTY DATA
( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'J' ) ) AS DATA ) ,
CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'J' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'J' ) ) AS DATA )
	END ,

	CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'J' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'J' ) ) AS DATA )
	END ,


	-- GET ALL UNPAID TIME
( SELECT * FROM TABLE ( TIMEOFF_GET_UNAPPROVED_HOURS ( IN_EMPLOYEE_NUMBER , 'A' ) ) AS DATA ) ,
CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_SALARY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'A' ) ) AS DATA )
	ELSE
( SELECT PENDING FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'A' ) ) AS DATA )
	END ,

CASE WHEN EMPLOYEE . PRPAY = 'S' THEN
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_SALARY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'A' ) ) AS DATA )
	ELSE
( SELECT PENDING_TMP FROM TABLE ( TIMEOFF_GET_HOURLY_PENDING_TMP ( IN_EMPLOYER_NUMBER , IN_EMPLOYEE_NUMBER , 'A' ) ) AS DATA )
	END

FROM PRPMS EMPLOYEE
	LEFT JOIN PRPSP MANAGER ON EMPLOYEE . PREN = MANAGER . SPEN
LEFT JOIN PRPMS MANAGER_ADDONS ON MANAGER_ADDONS . PREN = MANAGER . SPSPEN

WHERE EMPLOYEE . PREN = REFACTOR_EMPLOYEE_ID ( IN_EMPLOYEE_NUMBER ) AND
	EMPLOYEE . PRER = IN_EMPLOYER_NUMBER
)

SELECT A . EMPLOYER_NUMBER , A . EMPLOYEE_NUMBER , A . EMPLOYEE_NAME , A . EMPLOYEE_COMMON_NAME , A . EMPLOYEE_LAST_NAME ,
TRIM ( A . EMPLOYEE_LAST_NAME ) CONCAT ', ' CONCAT TRIM ( A . EMPLOYEE_COMMON_NAME ) CONCAT ' (' CONCAT TRIM ( A . EMPLOYEE_NUMBER ) CONCAT ')' ,
TRIM ( A . EMPLOYEE_COMMON_NAME ) CONCAT ' ' CONCAT TRIM ( A . EMPLOYEE_LAST_NAME ) CONCAT ' (' CONCAT TRIM ( A . EMPLOYEE_NUMBER ) CONCAT ')' ,
TRIM ( A . EMPLOYEE_EMAIL_ADDRESS ) ,
A . LEVEL_1 , A . LEVEL_2 , A . LEVEL_3 , A . LEVEL_4 , A . POSITION_CODE , TRIM ( A . POSITION_TITLE ) ,
A . EMPLOYEE_HIRE_DATE , A . SALARY_TYPE ,

A . MANAGER_EMPLOYEE_NUMBER , A . MANAGER_NAME , A . MANAGER_COMMON_NAME , A . MANAGER_LAST_NAME ,
TRIM ( A . MANAGER_LAST_NAME ) CONCAT ', ' CONCAT TRIM ( A . MANAGER_COMMON_NAME ) CONCAT ' (' CONCAT TRIM ( A . MANAGER_EMPLOYEE_NUMBER ) CONCAT ')' ,
TRIM ( A . MANAGER_COMMON_NAME ) CONCAT ' ' CONCAT TRIM ( A . MANAGER_LAST_NAME ) CONCAT ' (' CONCAT TRIM ( A . MANAGER_EMPLOYEE_NUMBER ) CONCAT ')' ,
TRIM ( A . MANAGER_EMAIL_ADDRESS ) ,
A . MANAGER_POSITION_CODE , A . MANAGER_POSITION_TITLE ,

-- PTO VALUES
A . PTO_EARNED , A . PTO_TAKEN , A . PTO_UNAPPROVED , A . PTO_PENDING , A . PTO_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . PTO_UNAPPROVED + A . PTO_PENDING + A . PTO_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . PTO_PENDING + A . PTO_PENDING_TMP ) , 0 )
END ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . PTO_EARNED - A . PTO_TAKEN - A . PTO_UNAPPROVED - A . PTO_PENDING - A . PTO_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . PTO_EARNED - A . PTO_TAKEN - A . PTO_PENDING - A . PTO_PENDING_TMP ) , 0 )
END ,

-- FLOAT VALUES
A . FLOAT_EARNED , A . FLOAT_TAKEN , A . FLOAT_UNAPPROVED , A . FLOAT_PENDING , A . FLOAT_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . FLOAT_UNAPPROVED + A . FLOAT_PENDING + A . FLOAT_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . FLOAT_PENDING + A . FLOAT_PENDING_TMP ) , 0 )
END ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . FLOAT_EARNED - A . FLOAT_TAKEN - A . FLOAT_UNAPPROVED - A . FLOAT_PENDING - A . FLOAT_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . FLOAT_EARNED - A . FLOAT_TAKEN - A . FLOAT_PENDING - A . FLOAT_PENDING_TMP ) , 0 )
END ,

-- SICK VALUES
A . SICK_EARNED , A . SICK_TAKEN , A . SICK_UNAPPROVED , A . SICK_PENDING , A . SICK_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . SICK_UNAPPROVED + A . SICK_PENDING + A . SICK_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . SICK_PENDING + A . SICK_PENDING_TMP ) , 0 )
END ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . SICK_EARNED - A . SICK_TAKEN - A . SICK_UNAPPROVED - A . SICK_PENDING - A . SICK_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . SICK_EARNED - A . SICK_TAKEN - A . SICK_PENDING - A . SICK_PENDING_TMP ) , 0 )
END ,

-- GF VALUES
A . GF_EARNED , A . GF_TAKEN , A . GF_UNAPPROVED , A . GF_PENDING , A . GF_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . GF_UNAPPROVED + A . GF_PENDING + A . GF_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . GF_PENDING + A . GF_PENDING_TMP ) , 0 )
END ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . GF_EARNED - A . GF_TAKEN - A . GF_UNAPPROVED - A . GF_PENDING - A . GF_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . GF_EARNED - A . GF_TAKEN - A . GF_PENDING - A . GF_PENDING_TMP ) , 0 )
END ,

-- UNEXCUSED VALUES
A . UNEXCUSED_UNAPPROVED , A . UNEXCUSED_PENDING , A . UNEXCUSED_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . UNEXCUSED_UNAPPROVED + A . UNEXCUSED_PENDING + A . UNEXCUSED_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . UNEXCUSED_PENDING + A . UNEXCUSED_PENDING_TMP ) , 0 )
END ,

-- BEREAVEMENT VALUES
A . BEREAVEMENT_UNAPPROVED , A . BEREAVEMENT_PENDING , A . BEREAVEMENT_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . BEREAVEMENT_UNAPPROVED + A . BEREAVEMENT_PENDING + A . BEREAVEMENT_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . BEREAVEMENT_PENDING + A . BEREAVEMENT_PENDING_TMP ) , 0 )
END ,

-- CIVIC DUTY VALUES
A . CIVIC_DUTY_UNAPPROVED , A . CIVIC_DUTY_PENDING , A . CIVIC_DUTY_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . CIVIC_DUTY_UNAPPROVED + A . CIVIC_DUTY_PENDING + A . CIVIC_DUTY_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . CIVIC_DUTY_PENDING + A . CIVIC_DUTY_PENDING_TMP ) , 0 )
END ,

-- UNPAID VALUES
A . UNPAID_UNAPPROVED , A . UNPAID_PENDING , A . UNPAID_PENDING_TMP ,
CASE IN_INCLUDE_UNAPPROVED
WHEN 'Y'
THEN COALESCE ( ( A . UNPAID_UNAPPROVED + A . UNPAID_PENDING + A . UNPAID_PENDING_TMP ) , 0 )
ELSE COALESCE ( ( A . UNPAID_PENDING + A . UNPAID_PENDING_TMP ) , 0 )
END

FROM A ;;

END ;;